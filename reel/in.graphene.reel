# ---------- Initialize Simulation ---------------------
units metal
dimension 3                
boundary p p p             
atom_style atomic

# ---------- Create Atoms ---------------------
# Lattice for graphene: unit cell vectors a1=3*a and a2=sqrt(3)*a

variable a equal 1.42
variable z_spacing equal 120.0
variable a1x equal 3.0*${a}       
variable a2y equal sqrt(3)*${a}   

lattice custom 1.0 &
    a1 ${a1x} 0.0 0.0 &
    a2 0.0 ${a2y} 0.0 &
    a3 0.0 0.0 ${z_spacing} &
    basis 0.0 0.0 0.0 &
    basis 0.3333 0.0 0.0 &
    basis 0.5 0.5 0.0 &
    basis 0.8333 0.5 0.0

# Define a region with an extended z dimension
region box block 0 50 0 40 0 1 units lattice  # Extend the region in the z-dimension, with units lattice

create_box 1 box
create_atoms 1 box

mass 1 12.011  # Mass of carbon in atomic mass units (amu)

# ---------- Interatomic Potential ---------------------
pair_style tersoff        
pair_coeff * * BNC.tersoff C

# ---------- Define Settings ---------------------
compute eng all pe/atom 
compute eatoms all reduce sum c_eng

# ---------- Run Minimization ---------------------
reset_timestep 0
fix 1 all box/relax aniso 0.0 vmax 0.001  # Use 'aniso' for 2D relaxation
thermo 10
thermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms
min_style cg
minimize 1e-25 1e-25 5000 10000

variable natoms equal "count(all)"
variable teng equal "c_eatoms"
variable length equal "lx"
variable ecoh equal "v_teng/v_natoms"

print "Total energy (eV) = ${teng};"
print "Number of atoms = ${natoms};"
print "Lattice constant (Angstroms) = ${length};"
print "Cohesive energy (eV) = ${ecoh};"

print "All done!"

#lmp_serial < in.graphene.reel > output_graphene_reel.txt
