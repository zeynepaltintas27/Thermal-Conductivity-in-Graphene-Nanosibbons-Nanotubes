LAMMPS (2 Aug 2023 - Update 3)
# ---------- Initialize Simulation ---------------------
units metal
dimension 3
boundary p p p
atom_style atomic

# ---------- Create Atoms ---------------------
variable a equal 1.42
variable z_spacing equal 120.0
variable a1x equal 3.0*${a}
variable a1x equal 3.0*1.42
variable a2y equal sqrt(3)*${a}
variable a2y equal sqrt(3)*1.42

lattice custom 1.0     a1 ${a1x} 0.0 0.0     a2 0.0 ${a2y} 0.0     a3 0.0 0.0 ${z_spacing}     basis 0.0 0.0 0.0     basis 0.3333 0.0 0.0     basis 0.5 0.5 0.0     basis 0.8333 0.5 0.0
lattice custom 1.0     a1 4.26 0.0 0.0     a2 0.0 ${a2y} 0.0     a3 0.0 0.0 ${z_spacing}     basis 0.0 0.0 0.0     basis 0.3333 0.0 0.0     basis 0.5 0.5 0.0     basis 0.8333 0.5 0.0
lattice custom 1.0     a1 4.26 0.0 0.0     a2 0.0 2.45951214674781 0.0     a3 0.0 0.0 ${z_spacing}     basis 0.0 0.0 0.0     basis 0.3333 0.0 0.0     basis 0.5 0.5 0.0     basis 0.8333 0.5 0.0
lattice custom 1.0     a1 4.26 0.0 0.0     a2 0.0 2.45951214674781 0.0     a3 0.0 0.0 120     basis 0.0 0.0 0.0     basis 0.3333 0.0 0.0     basis 0.5 0.5 0.0     basis 0.8333 0.5 0.0
Lattice spacing in x,y,z = 4.26 2.4595121 120

# Define a larger region with an extended z dimension
region graphene_box block 0 1 0 1 0 1 units lattice

create_box 1 graphene_box
Created orthogonal box = (0 0 0) to (4.26 2.4595121 120)
  1 by 1 by 1 MPI processor grid
create_atoms 1 region graphene_box
Created 4 atoms
  using lattice units in orthogonal box = (0 0 0) to (4.26 2.4595121 120)
  create_atoms CPU = 0.000 seconds

mass 1 12.011  # Mass of carbon in atomic mass units (amu)

# ---------- Interatomic Potential ---------------------
pair_style tersoff
pair_coeff * * BNC.tersoff C
Reading tersoff potential file BNC.tersoff with DATE: 2013-03-21

# ---------- Define Settings ---------------------
compute eng all pe/atom
compute eatoms all reduce sum c_eng

# ---------- Displace Atoms and Calculate Forces ---------------------
# Loop through displacements
variable displace_step equal 0.01  # Displacement magnitude
label loop
variable i loop 3  # Loop for x, y, z directions

    # Set displacements in each direction based on the loop index
    if "${i} == 1" then "variable dx equal ${displace_step}"                       "variable dy equal 0.0"                       "variable dz equal 0.0"
variable dx equal ${displace_step}
variable dx equal 0.01
variable dy equal 0.0
variable dz equal 0.0
    if "${i} == 2" then "variable dx equal 0.0"                       "variable dy equal ${displace_step}"                       "variable dz equal 0.0"
    if "${i} == 3" then "variable dx equal 0.0"                       "variable dy equal 0.0"                       "variable dz equal ${displace_step}"

    # Displace atoms along x, y, or z based on loop index
    displace_atoms all move ${dx} ${dy} ${dz}
    displace_atoms all move 0.01 ${dy} ${dz}
    displace_atoms all move 0.01 0 ${dz}
    displace_atoms all move 0.01 0 0
Displacing atoms ...

    # Output forces after each displacement for phonon calculations
    dump dump_force all custom 1 graphene_forces_${i}.lammpstrj id type x y z fx fy fz
    dump dump_force all custom 1 graphene_forces_1.lammpstrj id type x y z fx fy fz
    run 0  # Only compute forces without moving atoms
WARNING: No fixes with time integration, atoms won't move (src/verlet.cpp:60)
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 4.1
  ghost atom cutoff = 4.1
  binsize = 2.05, bins = 3 2 59
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair tersoff, perpetual
      attributes: full, newton on
      pair build: full/bin/atomonly
      stencil: full/bin/3d
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 3.203 | 3.203 | 3.203 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press     
         0   0             -31.865786      0             -31.865786      2942.9318    
Loop time of 1.167e-06 on 1 procs for 0 steps with 4 atoms

85.7% CPU use with 1 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0          | 0          | 0          |   0.0 |  0.00
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 1.167e-06  |            |       |100.00

Nlocal:              4 ave           4 max           4 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:             96 ave          96 max          96 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:              0 ave           0 max           0 min
Histogram: 1 0 0 0 0 0 0 0 0 0
FullNghs:           72 ave          72 max          72 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 72
Ave neighs/atom = 18
Neighbor list builds = 0
Dangerous builds = 0

    undump dump_force  # Clear previous dump to prepare for next loop

next i
jump SELF loop  # Return to loop
variable i loop 3  # Loop for x, y, z directions

    # Set displacements in each direction based on the loop index
    if "${i} == 1" then "variable dx equal ${displace_step}"                       "variable dy equal 0.0"                       "variable dz equal 0.0"
    if "${i} == 2" then "variable dx equal 0.0"                       "variable dy equal ${displace_step}"                       "variable dz equal 0.0"
variable dx equal 0.0
variable dy equal ${displace_step}
variable dy equal 0.01
variable dz equal 0.0
    if "${i} == 3" then "variable dx equal 0.0"                       "variable dy equal 0.0"                       "variable dz equal ${displace_step}"

    # Displace atoms along x, y, or z based on loop index
    displace_atoms all move ${dx} ${dy} ${dz}
    displace_atoms all move 0 ${dy} ${dz}
    displace_atoms all move 0 0.01 ${dz}
    displace_atoms all move 0 0.01 0
Displacing atoms ...

    # Output forces after each displacement for phonon calculations
    dump dump_force all custom 1 graphene_forces_${i}.lammpstrj id type x y z fx fy fz
    dump dump_force all custom 1 graphene_forces_2.lammpstrj id type x y z fx fy fz
    run 0  # Only compute forces without moving atoms
WARNING: No fixes with time integration, atoms won't move (src/verlet.cpp:60)
Per MPI rank memory allocation (min/avg/max) = 3.203 | 3.203 | 3.203 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press     
         0   0             -31.865786      0             -31.865786      2942.9318    
Loop time of 6.66e-07 on 1 procs for 0 steps with 4 atoms

150.2% CPU use with 1 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0          | 0          | 0          |   0.0 |  0.00
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 6.66e-07   |            |       |100.00

Nlocal:              4 ave           4 max           4 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:             96 ave          96 max          96 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:              0 ave           0 max           0 min
Histogram: 1 0 0 0 0 0 0 0 0 0
FullNghs:           72 ave          72 max          72 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 72
Ave neighs/atom = 18
Neighbor list builds = 0
Dangerous builds = 0

    undump dump_force  # Clear previous dump to prepare for next loop

next i
jump SELF loop  # Return to loop
variable i loop 3  # Loop for x, y, z directions

    # Set displacements in each direction based on the loop index
    if "${i} == 1" then "variable dx equal ${displace_step}"                       "variable dy equal 0.0"                       "variable dz equal 0.0"
    if "${i} == 2" then "variable dx equal 0.0"                       "variable dy equal ${displace_step}"                       "variable dz equal 0.0"
    if "${i} == 3" then "variable dx equal 0.0"                       "variable dy equal 0.0"                       "variable dz equal ${displace_step}"
variable dx equal 0.0
variable dy equal 0.0
variable dz equal ${displace_step}
variable dz equal 0.01

    # Displace atoms along x, y, or z based on loop index
    displace_atoms all move ${dx} ${dy} ${dz}
    displace_atoms all move 0 ${dy} ${dz}
    displace_atoms all move 0 0 ${dz}
    displace_atoms all move 0 0 0.01
Displacing atoms ...

    # Output forces after each displacement for phonon calculations
    dump dump_force all custom 1 graphene_forces_${i}.lammpstrj id type x y z fx fy fz
    dump dump_force all custom 1 graphene_forces_3.lammpstrj id type x y z fx fy fz
    run 0  # Only compute forces without moving atoms
WARNING: No fixes with time integration, atoms won't move (src/verlet.cpp:60)
Per MPI rank memory allocation (min/avg/max) = 3.203 | 3.203 | 3.203 Mbytes
   Step          Temp          E_pair         E_mol          TotEng         Press     
         0   0             -31.865786      0             -31.865786      2942.9318    
Loop time of 7.09e-07 on 1 procs for 0 steps with 4 atoms

141.0% CPU use with 1 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0          | 0          | 0          |   0.0 |  0.00
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 7.09e-07   |            |       |100.00

Nlocal:              4 ave           4 max           4 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:             96 ave          96 max          96 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:              0 ave           0 max           0 min
Histogram: 1 0 0 0 0 0 0 0 0 0
FullNghs:           72 ave          72 max          72 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 72
Ave neighs/atom = 18
Neighbor list builds = 0
Dangerous builds = 0

    undump dump_force  # Clear previous dump to prepare for next loop

next i
jump SELF loop  # Return to loop

phonopy --lammps -d --dim="3 3 1" -c POSCAR
ERROR: Unknown command: phonopy --lammps -d --dim="3 3 1" -c POSCAR (src/input.cpp:303)
Last command: phonopy --lammps -d --dim="3 3 1" -c POSCAR
