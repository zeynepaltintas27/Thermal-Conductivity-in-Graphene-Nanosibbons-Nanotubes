# ---------- Initialize Simulation ---------------------
units metal
dimension 3                
boundary p p p             
atom_style atomic

# ---------- Create Atoms ---------------------
variable a equal 1.42
variable z_spacing equal 120.0
variable a1x equal 3.0*${a}       
variable a2y equal sqrt(3)*${a}   

lattice custom 1.0 &
    a1 ${a1x} 0.0 0.0 &
    a2 0.0 ${a2y} 0.0 &
    a3 0.0 0.0 ${z_spacing} &
    basis 0.0 0.0 0.0 &
    basis 0.3333 0.0 0.0 &
    basis 0.5 0.5 0.0 &
    basis 0.8333 0.5 0.0

region graphene_box block 0 1 0 1 0 1 units lattice

create_box 1 graphene_box
create_atoms 1 region graphene_box

mass 1 12.011  # Mass of carbon in atomic mass units (amu)

# ---------- Interatomic Potential ---------------------
pair_style tersoff        
pair_coeff * * BNC.tersoff C

# ---------- Define Settings ---------------------
compute eng all pe/atom 
compute eatoms all reduce sum c_eng

# ---------- Run Minimization ---------------------
reset_timestep 0
fix 1 all box/relax aniso 0.0 vmax 0.001
thermo 10
thermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms
min_style cg
minimize 1e-25 1e-25 5000 10000

# Save relaxed configuration
write_data relaxed_graphene.data

# ---------- Apply Displacements and Save Forces ---------------------

# Apply small displacement in the x-direction
displace_atoms all move 0.01 0.0 0.0 units box

# Save forces after displacement
dump forces_x all custom 1 force_x_dump.lammpstrj id type x y z fx fy fz
run 0
undump forces_x

# Reset to relaxed configuration
read_data relaxed_graphene.data

# Apply small displacement in the y-direction
displace_atoms all move 0.0 0.01 0.0 units box

# Save forces after displacement
dump forces_y all custom 1 force_y_dump.lammpstrj id type x y z fx fy fz
run 0
undump forces_y

# Reset to relaxed configuration
read_data relaxed_graphene.data

# Apply small displacement in the z-direction
displace_atoms all move 0.0 0.0 0.01 units box

# Save forces after displacement
dump forces_z all custom 1 force_z_dump.lammpstrj id type x y z fx fy fz
run 0
undump forces_z

print "All done!"
