# ---------- Initialize Simulation ---------------------
units metal
dimension 3                
boundary p p p             
atom_style atomic

# ---------- Create Atoms ---------------------
variable a equal 1.42
variable z_spacing equal 120.0
variable a1x equal 3.0*${a}       
variable a2y equal sqrt(3)*${a}   

lattice custom 1.0 &
    a1 ${a1x} 0.0 0.0 &
    a2 0.0 ${a2y} 0.0 &
    a3 0.0 0.0 ${z_spacing} &
    basis 0.0 0.0 0.0 &
    basis 0.3333 0.0 0.0 &
    basis 0.5 0.5 0.0 &
    basis 0.8333 0.5 0.0

# Define a larger region with an extended z dimension
region graphene_box block 0 40 0 50 0 1 units lattice

create_box 1 graphene_box
create_atoms 1 region graphene_box

mass 1 12.011  # Mass of carbon in atomic mass units (amu)

# ---------- Interatomic Potential ---------------------
pair_style tersoff        
pair_coeff * * BNC.tersoff C

# ---------- Define Settings ---------------------
compute eng all pe/atom 
compute eatoms all reduce sum c_eng

write_data graphene.data

# ---------- Displace Atoms and Calculate Forces ---------------------
# Loop through displacements
variable displace_step equal 0.01  # Displacement magnitude
label loop
variable i loop 3  # Loop for x, y, z directions

    # Set displacements in each direction based on the loop index
    if "${i} == 1" then "variable dx equal ${displace_step}" &
                      "variable dy equal 0.0" &
                      "variable dz equal 0.0"
    if "${i} == 2" then "variable dx equal 0.0" &
                      "variable dy equal ${displace_step}" &
                      "variable dz equal 0.0"
    if "${i} == 3" then "variable dx equal 0.0" &
                      "variable dy equal 0.0" &
                      "variable dz equal ${displace_step}"

    # Displace atoms along x, y, or z based on loop index
    displace_atoms all move ${dx} ${dy} ${dz}

    # Output forces after each displacement for phonon calculations
    # dump 1 all custom 100 graphene_output.lammpstrj id type x y z
    dump dump_force all custom 1 graphene_forces_${i}.lammpstrj id type x y z fx fy fz


    run 0  # Only compute forces without moving atoms

    
    undump dump_force  # Clear previous dump to prepare for next loop

next i
jump SELF loop  # Return to loop



# ---------- Run Minimization ---------------------
reset_timestep 0
fix 1 all box/relax aniso 0.0 vmax 0.001
thermo 10
thermo_style custom step pe lx ly lz press pxx pyy pzz c_eatoms
min_style cg
minimize 1e-25 1e-25 5000 10000

variable natoms equal "count(all)"
variable teng equal "c_eatoms"
variable length equal "lx"
variable ecoh equal "v_teng/v_natoms"

print "Total energy (eV) = ${teng};"
print "Number of atoms = ${natoms};"
print "Lattice constant (Angstroms) = ${length};"
print "Cohesive energy (eV) = ${ecoh};"

print "All done!"



#lmp_serial < in.graphene.phonon > output_graphene_phonon.txt
#lmp_mpi < in.graphene.phonon > output_graphene_phonon.txt

# Run Terminal

# phonopy --lammps -d --dim="3 3 1" -c graphene.data
# mpirun -np 4 lmp_mpi -in in.graphene.phonon > output_graphene_phonon.txt
# phonopy -f graphene_forces_*.lammpstrj
# phonopy --dim="3 3 1" -d --amplitude=0.01
# phonopy --dim="3 3 1" -f graphene_forces_*.lammpstrj # for making FORCE_SETS 